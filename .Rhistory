print(sprintf('Median Value: %.2f',medianValue))
weekFac <- as.factor(c('weekday','weekend'))
filledData2 <- filledData
filledData2$weekend <- weekdays(filledData2$date) %in% c('Friday')
head(filledData2)
as.integer(c('FALSE'))
as.integer(c(FALSE))
filledData$weekend <- as.intefer(weekdays(filledData$date) %in% c('Friday'))
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
head(filledData)
head(factor(filledData$weekend,levels = c('Weekday','Weekend')))
head(factor(filledData$weekend,levels = weekFac)
)
order(filledData)
??as.factor()
factor(c(0,1,1,0,1), levels = c('a','b'))
factor(c(0,1,1,0,1), levels = c(4,5))
factor(c(0,1,1,0,1), levels = list(0 = 'a'))
factor(c(0,1,1,0,1), levels = list('a' = 0))
factor(c(0,1,1,0,1), levels = list('a' = 0,'b' = 1))
weekFac <- list('weekday' = 0, 'weekend' = 1)
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
filledData$weekend <- factor(filledData$weekend, levels = weekFac)
hea(filledData)
head(filledData)
weekFac <- list('weekday' = 0, 'weekend' = 1)
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
filledData$weekend <- factor(filledData$weekend, levels = weekFac)
head(filledData)
factor(filledData$weekend, levels = list('a' = 0,'b' = 1))
str(filledData)
filledData$weekend <- as.numeric(weekdays(filledData$date) %in% c('Friday'))
str(filledData)
filledData$weekend <- factor(filledData$weekend, levels = list('a' = 0,'b' = 1))
head(filledData)
filledData$weekend <- weekdays(filledData$date) %in% c('Friday')
head(filledData)
filledData$weekend <- factor(filledData$weekend, levels = list(FALSE = 0,TRUE = 1))
filledData$weekend <- factor(filledData$weekend, levels = list('FALSE' = 0,'TRUE' = 1))
head(filledData)
filledData$weekend <- as.character(weekdays(filledData$date) %in% c('Friday'))
filledData$weekend <- factor(filledData$weekend, levels = list('FALSE' = 0,'TRUE' = 1))
head(filledData)
filledData$weekend <- as.character(weekdays(filledData$date) %in% c('Friday'))
head(filledData)
weekFac <- factor('weekday' = 0, 'weekend' = 1)
weekFac <- factor(weekday = 0, weekend = 1)
?factor
factor(c(0,1),labels = 'a','b')
factor(c(0,1)levels = c(0,1),labels = 'a','b')
factor(c(0,1),levels = c(0,1),labels = 'a','b')
factor(c(0,1),levels = c(0,1))
factor(c(0,1),levels = c('0','1'))
factor(c(0,1),levels = c('0','sd'))
weekFac <- factor(weekday = 0, weekend = 1)
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
filledData$weekend[which(filledData$weekend == 1)] <- 'weekend'
filledData$weekend[which(filledData$weekend == 0)] <- 'weekday'
head(filledData)
filledData$weekend <- as.factor(filledData$weekend)
head(filledData)
str(filledData)
perDayStepWeekEnd <- tapply(filledData[isWeekend]$step, INDEX = filledData[isWeekend]$date, sum)
perDayStepWeekDay <- tapply(filledData[!isWeekend]$step, INDEX = filledData[!isWeekend]$date, sum)
isWeekend <- filledData$weekend
perDayStepWeekEnd <- tapply(filledData[isWeekend]$step, INDEX = filledData[isWeekend]$date, sum)
perDayStepWeekDay <- tapply(filledData[!isWeekend]$step, INDEX = filledData[!isWeekend]$date, sum)
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
isWeekend <- filledData$weekend
perDayStepWeekEnd <- tapply(filledData[isWeekend]$step, INDEX = filledData[isWeekend]$date, sum)
perDayStepWeekDay <- tapply(filledData[!isWeekend]$step, INDEX = filledData[!isWeekend]$date, sum)
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
isWeekend <- filledData$weekend
perDayStepWeekEnd <- tapply(filledData[isWeekend]$step, INDEX = filledData[isWeekend]$date, sum)
perDayStepWeekDay <- tapply(filledData[!isWeekend]$step, INDEX = filledData[!isWeekend]$date, sum)
head(filledData)
filledData[isWeekend]$step
filledData[isWeekend]$steps
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
isWeekend <- filledData$weekend
perDayStepWeekEnd <- tapply(filledData[isWeekend]$steps, INDEX = filledData[isWeekend]$date, sum)
perDayStepWeekDay <- tapply(filledData[!isWeekend]$steps, INDEX = filledData[!isWeekend]$date, sum)
perDayStepWeekEnd <- tapply(filledData[isWeekend]$steps, INDEX = filledData[isWeekend]$date, sum)
sum(is.na(filledData$date))
---
title: "Reproducible Research: Peer Assessment 1"
author: "Mohammad Mazraeh"
date: "September 21, 2015"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r, echo=TRUE}
data <- read.csv('activity.csv',na.strings = 'NA')
data$date <- as.Date(data$date)
# data <- data[!is.na(data$steps),]
head(data)
```
## What is mean total number of steps taken per day?
```{r, echo=TRUE}
perDayStep <- tapply(data$step, INDEX = data$date, sum)
hist(perDayStep, breaks = 10, ylab = 'Number of Steps', xlab = 'day')
```
```{r, echo=TRUE}
meanValue <- mean(perDayStep, na.rm = TRUE)
medianValue <- median(perDayStep,na.rm = TRUE)
print(sprintf('Mean Value: %.2f', meanValue))
print(sprintf('Median Value: %.2f',medianValue))
```
## What is the average daily activity pattern?
```{r, echo=TRUE}
avgSteps <- tapply(data$step, INDEX = data$interval,function (x) mean(x, na.rm = TRUE))
plot(names(avgSteps), avgSteps,type = 'l', ylab = 'Average Step per in Interval', xlab = 'Interval')
maxStepID <- which.max(avgSteps)
maxInterval <- names(avgSteps)[maxStepID]
print(sprintf('Interval with Maximum Step Average is: %s', maxInterval))
```
## Imputing missing values
```{r, echo=TRUE}
completeCount <- sum(complete.cases(data))
rowsWithNA <- dim(data)[1] - completeCount
print(sprintf('Number of Rows with NA: %d', rowsWithNA))
```
Fill in NAs with mean value
```{r, echo=TRUE}
filledData <- data
NAsIntervals <- filledData$interval[is.na(filledData$steps)]
filledData$step[is.na(filledData$step)] <- avgSteps[which(NAsIntervals == names(avgSteps))]
perDayStep <- tapply(filledData$step, INDEX = filledData$date, sum)
hist(perDayStep, breaks = 10, ylab = 'Number of Steps', xlab = 'day', main = 'After Imputing NAs')
```
We See Imputing Data has not changed the histogram. because each NA value has been
replaced by it's interval mean.
```{r, echo=TRUE}
meanValue <- mean(perDayStep, na.rm = TRUE)
medianValue <- median(perDayStep,na.rm = TRUE)
print(sprintf('Mean Value: %.2f', meanValue))
print(sprintf('Median Value: %.2f',medianValue))
```
## Are there differences in activity patterns between weekdays and weekends?
```{r, echo=TRUE}
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
isWeekend <- filledData$weekend
perDayStepWeekEnd <- tapply(filledData[isWeekend]$steps, INDEX = filledData[isWeekend]$date, sum)
perDayStepWeekDay <- tapply(filledData[!isWeekend]$steps, INDEX = filledData[!isWeekend]$date, sum)
filledData$weekend[which(filledData$weekend == 1)] <- 'weekend'
filledData$weekend[which(filledData$weekend == 0)] <- 'weekday'
filledData$weekend <- as.factor(filledData$weekend)
par(mfrow = c(1,2))
plot(names(avgSteps), avgSteps,type = 'l', ylab = 'Average Step per in Interval', xlab = 'Interval')
```
filledData <- data
filledData <- data
NAsIntervals <- filledData$interval[is.na(filledData$steps)]
filledData$step[is.na(filledData$step)] <- avgSteps[which(NAsIntervals == names(avgSteps))]
perDayStep <- tapply(filledData$step, INDEX = filledData$date, sum)
hist(perDayStep, breaks = 10, ylab = 'Number of Steps', xlab = 'day', main = 'After Imputing NAs')
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
isWeekend <- filledData$weekend
isWeekend <- filledData$weekend == 1
head(isWeekend)
perDayStepWeekEnd <- tapply(filledData[isWeekend]$steps, INDEX = filledData[isWeekend]$date, sum)
perDayStepWeekDay <- tapply(filledData[!isWeekend]$steps, INDEX = filledData[!isWeekend]$date, sum)
perDayStepWeekEnd <- tapply(filledData$steps[isWeekend], INDEX = filledData$date, sum)
perDayStepWeekEnd <- tapply(filledData$step[isWeekend], INDEX = filledData$date, sum)
perDayStepWeekEnd <- tapply(filledData$step[isWeekend], INDEX = filledData$date[isWeekend], sum)
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
isWeekend <- filledData$weekend == 1
perDayStepWeekEnd <- tapply(filledData$step[isWeekend], INDEX = filledData$date[isWeekend], sum)
perDayStepWeekDay <- tapply(filledData$step[!isWeekend], INDEX = filledData$date[!isWeekend], sum)
filledData$weekend[which(filledData$weekend == 1)] <- 'weekend'
filledData$weekend[which(filledData$weekend == 0)] <- 'weekday'
filledData$weekend <- as.factor(filledData$weekend)
par(mfrow = c(1,2))
plot(names(avgSteps), avgSteps,type = 'l', ylab = 'Average Step per in Interval', xlab = 'Interval')
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
isWeekend <- filledData$weekend == 1
perDayStepWeekEnd <- tapply(filledData$step[isWeekend], INDEX = filledData$date[isWeekend], sum)
perDayStepWeekDay <- tapply(filledData$step[!isWeekend], INDEX = filledData$date[!isWeekend], sum)
filledData$weekend[which(filledData$weekend == 1)] <- 'weekend'
filledData$weekend[which(filledData$weekend == 0)] <- 'weekday'
filledData$weekend <- as.factor(filledData$weekend)
par(mfrow = c(2,1))
plot(names(perDayStepWeekEnd), perDayStepWeekEnd,type = 'l', ylab = 'Average Step per in Interval', xlab = 'Interval', main = 'Weekend')
plot(names(perDayStepWeekDay), perDayStepWeekDay,type = 'l', ylab = 'Average Step per in Interval', xlab = 'Interval','Weekday')
par(mfrow = c(2,1))
plot(names(perDayStepWeekEnd), perDayStepWeekEnd,type = 'l', ylab = 'Average Step per in Interval', xlab = 'Interval', main = 'Weekend')
plot(names(perDayStepWeekDay), perDayStepWeekDay,type = 'l', ylab = 'Average Step per in Interval', xlab = 'Interval','Weekday')
names(perDayStepWeekEnd)
plot(names(perDayStepWeekEnd), perDayStepWeekEnd,type = 'l')
sum(is.na(perDayStepWeekEnd))
sum(is.na(filledData$steps))
data <- read.csv('activity.csv',na.strings = 'NA')
data$date <- as.Date(data$date)
# data <- data[!is.na(data$steps),]
head(data)
head(filledData)
data <- read.csv('activity.csv',na.strings = 'NA')
data$date <- as.Date(data$date)
# data <- data[!is.na(data$steps),]
head(data)
head(filledData)
head(data)
sum(is.na(filledData$step))
sum(is.na(filledData$steps))
---
title: "Reproducible Research: Peer Assessment 1"
author: "Mohammad Mazraeh"
date: "September 21, 2015"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r, echo=TRUE}
data <- read.csv('activity.csv',na.strings = 'NA')
data$date <- as.Date(data$date)
# data <- data[!is.na(data$steps),]
head(data)
```
## What is mean total number of steps taken per day?
```{r, echo=TRUE}
perDayStep <- tapply(data$steps, INDEX = data$date, sum)
hist(perDayStep, breaks = 10, ylab = 'Number of Steps', xlab = 'day')
```
```{r, echo=TRUE}
meanValue <- mean(perDayStep, na.rm = TRUE)
medianValue <- median(perDayStep,na.rm = TRUE)
print(sprintf('Mean Value: %.2f', meanValue))
print(sprintf('Median Value: %.2f',medianValue))
```
## What is the average daily activity pattern?
```{r, echo=TRUE}
avgSteps <- tapply(data$steps, INDEX = data$interval,function (x) mean(x, na.rm = TRUE))
plot(names(avgSteps), avgSteps,type = 'l', ylab = 'Average Step per in Interval', xlab = 'Interval')
maxStepID <- which.max(avgSteps)
maxInterval <- names(avgSteps)[maxStepID]
print(sprintf('Interval with Maximum Step Average is: %s', maxInterval))
```
## Imputing missing values
```{r, echo=TRUE}
completeCount <- sum(complete.cases(data))
rowsWithNA <- dim(data)[1] - completeCount
print(sprintf('Number of Rows with NA: %d', rowsWithNA))
```
Fill in NAs with mean value
```{r, echo=TRUE}
filledData <- data
NAsIntervals <- filledData$interval[is.na(filledData$steps)]
filledData$steps[is.na(filledData$steps)] <- avgSteps[which(NAsIntervals == names(avgSteps))]
perDayStep <- tapply(filledData$steps, INDEX = filledData$date, sum)
hist(perDayStep, breaks = 10, ylab = 'Number of Steps', xlab = 'day', main = 'After Imputing NAs')
```
We See Imputing Data has not changed the histogram. because each NA value has been
replaced by it's interval mean.
```{r, echo=TRUE}
meanValue <- mean(perDayStep, na.rm = TRUE)
medianValue <- median(perDayStep,na.rm = TRUE)
print(sprintf('Mean Value: %.2f', meanValue))
print(sprintf('Median Value: %.2f',medianValue))
```
## Are there differences in activity patterns between weekdays and weekends?
```{r, echo=TRUE}
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
isWeekend <- filledData$weekend == 1
perDayStepWeekEnd <- tapply(filledData$steps[isWeekend], INDEX = filledData$date[isWeekend], sum)
perDayStepWeekDay <- tapply(filledData$steps[!isWeekend], INDEX = filledData$date[!isWeekend], sum)
filledData$weekend[which(filledData$weekend == 1)] <- 'weekend'
filledData$weekend[which(filledData$weekend == 0)] <- 'weekday'
filledData$weekend <- as.factor(filledData$weekend)
```
```{r, echo=TRUE}
par(mfrow = c(2,1))
plot(names(perDayStepWeekEnd), perDayStepWeekEnd,type = 'l')
plot(names(perDayStepWeekDay), perDayStepWeekDay,type = 'l', ylab = 'Average Step per in Interval', xlab = 'Interval','Weekday')
```
sum(is.na(filledData$steps))
dim(filledData)
sum(is.na(avgSteps))
filledData$steps[is.na(filledData$steps)] <- avgSteps[which(NAsIntervals == names(avgSteps))]
filledData$steps[is.na(filledData$steps)] <- avgSteps[which(NAsIntervals == names(avgSteps))]
sum(is.na(perDayStepWeekEnd))
sum(is.na(perDayStepWeekDay))
apply(is.na(filledData),1,sum)
apply(is.na(filledData),2,sum)
filledData <- data
apply(is.na(filledData),2,sum)
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
isWeekend <- filledData$weekend == 1
perDayStepWeekEnd <- tapply(filledData$steps[isWeekend], INDEX = filledData$date[isWeekend], sum)
perDayStepWeekDay <- tapply(filledData$steps[!isWeekend], INDEX = filledData$date[!isWeekend], sum)
filledData$weekend[which(filledData$weekend == 1)] <- 'weekend'
filledData$weekend[which(filledData$weekend == 0)] <- 'weekday'
filledData$weekend <- as.factor(filledData$weekend)
par(mfrow = c(2,1))
plot(names(perDayStepWeekEnd), perDayStepWeekEnd,type = 'l', ylab = 'Average Step per in Interval', xlab = 'Interval', na.omit = TRUE)
plot(perDayStepWeekEnd,type = 'l', ylab = 'Average Step per in Interval', xlab = 'Interval', na.omit = TRUE)
plot(perDayStepWeekEnd)
plot(perDayStepWeekEnd[!is.na(perDayStepWeekEnd)])
par(mfrow = c(2,2))
plot(perDayStepWeekEnd,type = 'l', ylab = 'Average Step per in Interval', xlab = 'Interval', na.omit = TRUE)
plot(perDayStepWeekEnd,type = 'l', ylab = 'Average Step per in Interval', xlab = 'Interval', na.omit = TRUE)
par(mfrow = c(1,1))
plot(perDayStepWeekEnd,type = 'l', ylab = 'Average Step per in Interval', xlab = 'Interval', na.omit = TRUE)
par(mfrow = c(1,2))
plot(perDayStepWeekEnd,type = 'l', ylab = 'Average Step per in Interval', xlab = 'Interval', na.omit = TRUE)
library('gridextra')
install.packages('gridextra')
install.packages('gridExtra')
library('gridExtra')
p1 <- qplot(perDayStepWeekEnd)
p2 <- qplot(perDayStepWeekDay)
library('ggplot')
library('ggplot2')
p1 <- qplot(perDayStepWeekEnd)
p2 <- qplot(perDayStepWeekDay)
print(q1)
print(p1)
print(p2)
p1 <- qplot(perDayStepWeekEnd)
p2 <- qplot(perDayStepWeekDay)
grid.arrange(p1,p2,nrow = 2)
p1 <- qplot(perDayStepWeekEnd, geom = 'line')
p2 <- qplot(perDayStepWeekDay)
grid.arrange(p1,p2,nrow = 2)
p1 <- qplot(perDayStepWeekEnd, facets = 19)
p2 <- qplot(perDayStepWeekDay)
grid.arrange(p1,p2,nrow = 2)
p1 <- qplot(perDayStepWeekEnd)
p2 <- qplot(perDayStepWeekDay)
grid.arrange(p1,p2,nrow = 2)
p1 <- ggplot2::geom_line(perDayStepWeekEnd)
p2 <- qplot(perDayStepWeekDay)
grid.arrange(p1,p2,nrow = 2)
??qplot
??ggplot2::qplot
p1 <- ggplot2::qplot(perDayStepWeekEnd) + geom_line()
p2 <- qplot(perDayStepWeekDay)
grid.arrange(p1,p2,nrow = 2)
p1 <- ggplot2::ggplot(perDayStepWeekEnd) + geom_line()
p2 <- qplot(perDayStepWeekDay)
grid.arrange(p1,p2,nrow = 2)
p1 <- ggplot2::ggplot(perDayStepWeekEnd)
p2 <- qplot(perDayStepWeekDay)
grid.arrange(p1,p2,nrow = 2)
p1 <- ggplot2::ggplot(perDayStepWeekEnd)
p2 <- qplot(perDayStepWeekDay)
grid.arrange(p1,p2,nrow = 2)
library('lattice')
xyplot(perDayStepWeekDay ~ names(perDayStepWeekDay) )
perDayStep <- tapply(filledData$steps, INDEX = filledData$date, mean)
df <- data.frame(avg = perDayStep , days = names(perDayStep) %in% c('Friday'))
head(df)
perDayStep <- tapply(filledData$steps, INDEX = filledData$date, mean)
df <- data.frame(avg = perDayStep , weekend = names(perDayStep) %in% c('Friday'))
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
isWeekend <- filledData$weekend == 1
perDayStepWeekDay <- tapply(filledData$steps, INDEX = filledData$date, mean)
df <- data.frame(avg = perDayStep , weekday = names(perDayStepWeekDay),weekend = weekday %in% c('Friday'))
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
isWeekend <- filledData$weekend == 1
perDayStepWeekDay <- tapply(filledData$steps, INDEX = filledData$date, mean)
df <- data.frame(avg = perDayStep , weekday = names(perDayStepWeekDay),weekend = names(perDayStep) %in% c('Friday'))
p1 <- ggplot2::ggplot(data = df1, aes(x = names(weekday), y = perDayStep))
df1= df[df$weekend == 1,]
df2= df[df$weekend == 0,]
p1 <- ggplot2::ggplot(data = df1, aes(x = names(weekday), y = perDayStep))
print(p1)
df1= df[df$weekend == 1,]
df2= df[df$weekend == 0,]
p1 <- ggplot2::ggplot(data = df1, aes(x = names(weekday), y = perDayStep))
p2 <- ggplot2::ggplot(data = df2, aes(x = names(weekday), y = perDayStep))
grid.arrange(p1,p2,nrow = 2)
head(df1)
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
isWeekend <- filledData$weekend == 1
perDayStepWeekDay <- tapply(filledData$steps, INDEX = filledData$date, mean)
df <- data.frame(avg = perDayStep , weekday = names(perDayStepWeekDay),weekend = names(perDayStep) %in% c('Friday'))
# perDayStep <- tapply(filledData$steps[isWeekend], INDEX = filledData$date[isWeekend], sum)
# perDayStepWeekDay <- tapply(filledData$steps[!isWeekend], INDEX = filledData$date[!isWeekend], sum)
# filledData$weekend[which(filledData$weekend == 1)] <- 'weekend'
# filledData$weekend[which(filledData$weekend == 0)] <- 'weekday'
# filledData$weekend <- as.factor(filledData$weekend)
df1= df[df$weekend == 1,]
df2= df[df$weekend == 0,]
p1 <- ggplot2::ggplot(data = df1, aes(x = names(weekday), y = perDayStep))
p2 <- ggplot2::ggplot(data = df2, aes(x = names(weekday), y = perDayStep))
grid.arrange(p1,p2,nrow = 2)
head(df1)
head(df)
dfEnd= df[df$weekend,]
dfDay= df[!df$weekend,]
p1 <- ggplot2::ggplot(data = df1, aes(x = names(weekday), y = perDayStep))
p2 <- ggplot2::ggplot(data = df2, aes(x = names(weekday), y = perDayStep))
grid.arrange(p1,p2,nrow = 2)
head(df1)
df$weekend
filledData <- data
filledData$weekend <- as.integer(weekdays(filledData$date) %in% c('Friday'))
isWeekend <- filledData$weekend == 1
perDayStepWeekDay <- tapply(filledData$steps, INDEX = filledData$date, mean)
df <- data.frame(avg = perDayStep , weekday = names(perDayStepWeekDay),weekend = names(perDayStep) %in% c('Friday'))
# perDayStep <- tapply(filledData$steps[isWeekend], INDEX = filledData$date[isWeekend], sum)
# perDayStepWeekDay <- tapply(filledData$steps[!isWeekend], INDEX = filledData$date[!isWeekend], sum)
# filledData$weekend[which(filledData$weekend == 1)] <- 'weekend'
# filledData$weekend[which(filledData$weekend == 0)] <- 'weekday'
# filledData$weekend <- as.factor(filledData$weekend)
dfEnd= df[df$weekend,]
dfDay= df[!df$weekend,]
p1 <- ggplot2::ggplot(data = df1, aes(x = names(weekday), y = perDayStep))
p2 <- ggplot2::ggplot(data = df2, aes(x = names(weekday), y = perDayStep))
grid.arrange(p1,p2,nrow = 2)
head(df1)
head(df2)
df <- data.frame(avg = perDayStep , weekday = weekdays(names(perDayStepWeekDay)),weekend = weekdays(names(perDayStep)) %in% c('Friday'))
ledData$date) %in% c('Friday'))
isWeekend <- filledData$weekend == 1
perDayStepWeekDay <- tapply(filledData$steps, INDEX = filledData$date, mean)
df <- data.frame(avg = perDayStep , weekday = weekdays(names(perDayStepWeekDay)),weekend = weekdays(names(perDayStep)) %in% c('Friday'))
perDayStepWeekDay <- tapply(filledData$steps, INDEX = filledData$date, mean)
df <- data.frame(avg = perDayStep , weekday = weekdays(as.Date(names(perDayStepWeekDay)))
perDayStepWeekDay <- tapply(filledData$steps, INDEX = filledData$date, mean)
df <- data.frame(avg = perDayStep , weekday = weekdays(as.Date(names(perDayStepWeekDay))))
perDayStepWeekDay <- tapply(filledData$steps, INDEX = filledData$date, mean)
)
perDayStepWeekDay <- tapply(filledData$steps, INDEX = filledData$date, mean)
df <- data.frame(avg = perDayStep , weekday = weekdays(as.Date(names(perDayStepWeekDay))))
head(df)
df$weekend <- df$weekday %in% c('Friday')
head(df)
dfEnd= df[df$weekend,]
dfDay= df[!df$weekend,]
p1 <- ggplot2::ggplot(data = df1, aes(x = names(weekday), y = perDayStep))
p2 <- ggplot2::ggplot(data = df2, aes(x = names(weekday), y = perDayStep))
grid.arrange(p1,p2,nrow = 2)
p1 <- ggplot2::ggplot(data = dfEnd, aes(x = names(weekday), y = perDayStep))
p2 <- ggplot2::ggplot(data = dfDay, aes(x = names(weekday), y = perDayStep))
grid.arrange(p1,p2,nrow = 2)
head(dfEnd)
head(dfDay)
ggplot2::ggplot(data = dfEnd, aes(x = names(weekday), y = perDayStep))
p1 <- ggplot2::ggplot(data = dfEnd, aes(x = names(weekday), y = perDayStep)) + geom_line()
p1
p1 <- ggplot2::ggplot(data = dfEnd, aes(x = names(weekday), y = perDayStep))
p1
p1 <- qplot(dfEnd$weekday, dfEnd$avg)
p1
perDayStepWeekDay <- tapply(filledData$steps, INDEX = filledData$date, mean)
df <- data.frame(avg = perDayStep , date = as.Date(names(perDayStepWeekDay)),weekday = weekdays(as.Date(names(perDayStepWeekDay))))
p1 <- qplot(dfEnd$date, dfEnd$avg) + geom_line()
p1 <- qplot(dfEnd$date, dfEnd$avg) + geom_line()
p1 <- qplot(dfEnd$date, dfEnd$avg) + geom_line()
p1
p1 <- qplot(dfEnd$date, dfEnd$avg)
p1
qplot(dfEnd$date, dfEnd$avg)
dfEnd
dfEnd= df[df$weekend,]
cs <- complete.cases(dfEnd)
dfEnd <- dfEnd[cs,]
dfDay= df[!df$weekend,]
cs <- complete.cases(dfDay)
dfDay <- dfDay[cs,]
p1 <- qplot(dfEnd$date, dfEnd$avg)
p1
!df$weekend
perDayStepWeekDay <- tapply(filledData$steps, INDEX = filledData$date, mean)
df <- data.frame(avg = perDayStep , date = as.Date(names(perDayStepWeekDay)),weekday = weekdays(as.Date(names(perDayStepWeekDay))))
df$weekend <- df$weekday %in% c('Friday')
df$weekend
dfEnd= df[df$weekend,]
cs <- complete.cases(dfEnd)
dfEnd <- dfEnd[cs,]
dfDay= df[!df$weekend,]
cs <- complete.cases(dfDay)
dfDay <- dfDay[cs,]
p1 <- qplot(dfEnd$date, dfEnd$avg)
p1
dfEnd= df[df$weekend,]
cs <- complete.cases(dfEnd)
dfEnd <- dfEnd[cs,]
dfDay= df[!df$weekend,]
cs <- complete.cases(dfDay)
dfDay <- dfDay[cs,]
p1 <- qplot(dfEnd$date, dfEnd$avg)
p2<- qplot(dfDay$date, dfDay$avg)
grid.arrange(p1,p2,nrow = 2)
dfEnd= df[df$weekend,]
cs <- complete.cases(dfEnd)
dfEnd <- dfEnd[cs,]
dfDay= df[!df$weekend,]
cs <- complete.cases(dfDay)
dfDay <- dfDay[cs,]
p1 <- qplot(dfEnd$date, dfEnd$avg, main = 'Weekend',xlab = 'date', ylab = 'step avg')
p2<- qplot(dfDay$date, dfDay$avg,'Weekday',xlab = 'date', ylab = 'step avg')
grid.arrange(p1,p2,nrow = 2)
p1 <- qplot(dfEnd$date, dfEnd$avg, main = 'Weekend',xlab = 'date', ylab = 'step avg') + geom_line()
p2<- qplot(dfDay$date, dfDay$avg,'Weekday',xlab = 'date', ylab = 'step avg')
grid.arrange(p1,p2,nrow = 2)
dfEnd= df[df$weekend,]
cs <- complete.cases(dfEnd)
dfEnd <- dfEnd[cs,]
dfDay= df[!df$weekend,]
cs <- complete.cases(dfDay)
dfDay <- dfDay[cs,]
p1 <- qplot(dfEnd$date, dfEnd$avg, main = 'Weekend',xlab = 'date', ylab = 'step avg') + geom_line()
p2<- qplot(dfDay$date, dfDay$avg,'Weekday',xlab = 'date', ylab = 'step avg') + gemo_line()
grid.arrange(p1,p2,nrow = 2)
source('D:/ProjectsFolder/RepData_PeerAssessment1/PA1_template.Rmd', encoding = 'UTF-8')
knitr::knit2html('PA1_template.Rmd',output = 'PA1_template.Rmd')
knitr::knit2html('PA1_template.Rmd',output = 'PA1_template.html')
